#!/bin/bash

cd "`dirname $0`"

source /etc/hp-netscan.conf

set -o pipefail
while true; do
    # if scan-to button pressed - run the command corresponding to the destination name
    name=`wget -q -O - http://${PRINTER}/hp/device/notifications.xml \
              | egrep -o '<ScanToDeviceDisplay>(.*)</ScanToDeviceDisplay>' \
          | sed -e 's/<ScanToDeviceDisplay>//' \
          | sed -e 's/<\/ScanToDeviceDisplay>//' \
          | sed -e   's/.*://'` && {
   if [ "$name" != "" ]; then
       if [ -x "${HELPER_DIR}/$name" ]; then
      AUTOFEED=`wget --quiet -O - http://${PRINTER}/hp/device/notifications.xml | grep "<ADFLoaded>" | tail --lines=1 | sed "s/^.*<ADFLoaded>\([01]\)<\/ADFLoaded>.*$/\1/g"`
      OUTPUT_PREFIX="scan_$(date '+%Y%m%d-%H%M%S')"

      source "${HELPER_DIR}/$name"

      if [ "$AUTOFEED" = "0" ]
      then
          scanimage --format=pnm --mode=Color --resolution=$RESOLUTION > "${SCAN_DIR}/${OUTPUT_PREFIX}_${RESOLUTION}.pnm" 2> /dev/null
      else
          scanimage --format=pnm --mode=Color --resolution=$RESOLUTION --batch="${SCAN_DIR}/${OUTPUT_PREFIX}_${RESOLUTION}-%d.pnm" --batch-start=1 --source ADF > /dev/null 2>&1
      fi

      for pnm in $(find "${SCAN_DIR}" -type f -name ${OUTPUT_PREFIX}\*)
      do
          img=$(echo $pnm | sed -e s/.pnm$/.${OUTPUT_FORMAT}/)
          convert -quality 100% "${pnm}" "${img}" > /dev/null 2>&1
          rm "${pnm}"
          chmod a+rw "${img}"
      done
       fi
   fi
    }

    # update scan-to destinations in printer if necessary
    ./scanto_destination -l | sed  's/.*://' >/tmp/printer-dests &&
   ls ${HELPER_DIR} >/tmp/command-dests &&
   diff /tmp/printer-dests /tmp/command-dests | egrep '<|>' |
       sed 's#<#./scanto_destination -d#;s#>#./scanto_destination -a#' | bash

    sleep 5
done
